searchState.loadedDescShard("airbyte_client", 0, "Returns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method <code>save_stats</code>\nstruct for typed errors of method <code>save_sync_config</code>\nstruct for typed errors of method <code>set_workflow_in_attempt</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method <code>create_connection</code>\nstruct for typed errors of method <code>delete_connection</code>\nstruct for typed errors of method <code>get_connection</code>\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method <code>reset_connection</code>\nstruct for typed errors of method <code>reset_connection_stream</code>\nstruct for typed errors of method <code>search_connections</code>\nstruct for typed errors of method <code>sync_connection</code>\nstruct for typed errors of method <code>update_connection</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList connections for workspace, including deleted …\nList connections for workspace. Does not return deleted …\nApply a patch-style update to a connection. Only fields …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method <code>clone_destination</code>\nstruct for typed errors of method <code>create_destination</code>\nstruct for typed errors of method <code>delete_destination</code>\nstruct for typed errors of method <code>get_destination</code>\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method <code>search_destinations</code>\nstruct for typed errors of method <code>update_destination</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGuaranteed to retrieve the latest information on supported …\nstruct for typed errors of method …\nstruct for typed errors of method …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method <code>get_health_check</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method <code>create_or_update_state</code>\nstruct for typed errors of method …\nstruct for typed errors of method <code>save_stats</code>\nstruct for typed errors of method <code>save_sync_config</code>\nstruct for typed errors of method <code>set_workflow_in_attempt</code>\nstruct for typed errors of method …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method <code>cancel_job</code>\nstruct for typed errors of method …\nstruct for typed errors of method <code>get_job_debug_info</code>\nstruct for typed errors of method <code>get_job_info</code>\nstruct for typed errors of method <code>get_job_info_light</code>\nstruct for typed errors of method <code>get_job_info_without_logs</code>\nstruct for typed errors of method <code>get_last_replication_job</code>\nstruct for typed errors of method <code>list_jobs_for</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method <code>get_logs</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method <code>try_notification_config</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method <code>get_open_api_spec</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method <code>check_operation</code>\nstruct for typed errors of method <code>create_operation</code>\nstruct for typed errors of method <code>delete_operation</code>\nstruct for typed errors of method <code>get_operation</code>\nstruct for typed errors of method …\nstruct for typed errors of method <code>update_operation</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList operations for connection.\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method <code>clone_source</code>\nstruct for typed errors of method <code>create_source</code>\nstruct for typed errors of method <code>delete_source</code>\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method <code>get_source</code>\nstruct for typed errors of method …\nstruct for typed errors of method <code>partial_update_source</code>\nstruct for typed errors of method <code>search_sources</code>\nstruct for typed errors of method <code>update_source</code>\nstruct for typed errors of method …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList sources for workspace. Does not return deleted …\nstruct for typed errors of method …\nstruct for typed errors of method <code>delete_source_definition</code>\nstruct for typed errors of method <code>get_source_definition</code>\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method <code>list_source_definitions</code>\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method <code>update_source_definition</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGuaranteed to retrieve the latest information on supported …\nstruct for typed errors of method …\nstruct for typed errors of method …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method <code>complete_source_o_auth</code>\nstruct for typed errors of method <code>get_source_o_auth_consent</code>\nstruct for typed errors of method …\nstruct for typed errors of method …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method <code>create_or_update_state</code>\nstruct for typed errors of method <code>get_state</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method <code>create_stream_status</code>\nstruct for typed errors of method <code>get_stream_statuses</code>\nstruct for typed errors of method <code>update_stream_status</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method <code>create_stream_status</code>\nstruct for typed errors of method <code>get_stream_statuses</code>\nstruct for typed errors of method <code>update_stream_status</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nstruct for typed errors of method <code>get_state_type</code>\nstruct for typed errors of method <code>web_backend_check_updates</code>\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nstruct for typed errors of method …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns all available geographies in which a data sync can …\nApply a patch-style update to a connection. Only fields …\nstruct for typed errors of method <code>create_workspace</code>\nstruct for typed errors of method <code>delete_workspace</code>\nstruct for typed errors of method …\nstruct for typed errors of method <code>get_workspace_by_slug</code>\nstruct for typed errors of method <code>get_workspace</code>\nstruct for typed errors of method <code>list_workspaces</code>\nstruct for typed errors of method <code>update_workspace</code>\nstruct for typed errors of method <code>update_workspace_feedback</code>\nstruct for typed errors of method <code>update_workspace_name</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nActorCatalogWithUpdatedAt : A source actor catalog with …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA source actor catalog with the timestamp it was mostly …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nActorDefinitionResourceRequirements : actor definition …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nactor definition specific resource requirements. if …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nJson Path to a field in the connectorSpecification that …\nValue of the predicate_key fields for the advanced auth to …\nAirbyteCatalog : describes the available schema (catalog).\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\ndescribes the available schema (catalog).\nAirbyteStream : the immutable schema defined by the source\nPath to the field that will be used to determine if a …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStream schema using Json Schema specs.\nStream’s name.\nOptional Source-defined namespace. Airbyte streams from …\nthe immutable schema defined by the source\nIf the source defines the cursor field, then any other …\nIf the source defines the primary key, paths to the fields …\nAirbyteStreamAndConfiguration : each stream is split in …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\neach stream is split in two parts; the immutable schema …\nAirbyteStreamConfiguration : the mutable part of the …\nAlias name to the stream to be used in the destination\nPath to the field that will be used to determine if a …\nWhether field selection should be enabled. If this is …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nthe mutable part of the stream to configure the destination\nPaths to the fields that will be used as primary key. This …\nIf this is true, the stream is selected with all of its …\nPaths to the fields that will be included in the …\nDoes the connector suggest that this stream be enabled by …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrue if the number of committed records for this attempt …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe values required to configure the destination. The …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe values required to configure the source. The schema …\nCatalogDiff : Describes the difference between two Airbyte …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDescribes the difference between two Airbyte catalogs.\nlist of stream transformations. order does not matter.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe values required to configure OAuth flows. The schema …\nThe query parameters present in the redirect URL after a …\nWhen completing OAuth flow to gain an access token, some …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe values required to configure OAuth flows. The schema …\nThe query parameters present in the redirect URL after a …\nWhen completing OAuth flow to gain an access token, some …\nIf set to true, returns a secret coordinate which …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOptional name of the connection\nUsed when namespaceDefinition is ‘customformat’. If …\nPrefix that will be prepended to the name of each stream …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUsed when namespaceDefinition is ‘customformat’. If …\nPrefix that will be prepended to the name of each stream …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConnectionSchedule : if null, then no schedule is set.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nif null, then no schedule is set.\nConnectionScheduleData : schedule for when the the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nschedule for when the the connection should run, per the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConnectionScheduleType : determine how the schedule data …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUsed when namespaceDefinition is ‘customformat’. If …\nPrefix that will be prepended to the name of each stream …\nConnectionState : Contains the state for a connection. The …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nContains the state for a connection. The stateType field …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConnectionStatus : Active means that data is flowing …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConnectionUpdate : Used to apply a patch-style update to a …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nName that will be set to this connection\nUsed when namespaceDefinition is ‘customformat’. If …\nUsed to apply a patch-style update to a connection, which …\nPrefix that will be prepended to the name of each stream …\nLow code CDK manifest JSON object\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLow code CDK manifest JSON object\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLow code CDK manifest JSON object\nThe specification for what values are required to …\nThe values required to configure the destination. The …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDestinationCloneRequestBody : The values required to …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe values required to configure the destination. The …\nThe values required to configure the destination. The …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe values required to configure the destination. The …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe Airbyte Protocol version supported by the connector\nThe date when this connector was first released, in …\nan optional flag indicating whether DBT is used in the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe specification for what values are required to …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe values required to configure OAuth flows. The schema …\nThe url to redirect to after getting the user consent\nThe values required to configure the destination. The …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe values required to configure the destination. The …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe values required to configure the destination. The …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nFailureOrigin : Indicates where the error originated. If …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrue if it is known that retrying may succeed, e.g. for a …\nFailureType : Categorizes well known errors into types for …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nJSONSchema representation of the field\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nJSONSchema representation of the field\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nJSONSchema representation of the field\nJSONSchema representation of the field\nFieldTransform : Describes the difference between two …\nA field name is a list of strings that form the path to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDescribes the difference between two Streams.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nthe total count of jobs for the specified connection\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nJobType : enum that describes the different types of jobs …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nJobTypeResourceLimit : sets resource requirements for a …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nsets resource requirements for a specific job type for an …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLogType : type/source of logs produced type/source of logs …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNamespaceDefinitionType : Method used for computing final …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNormalizationDestinationDefinitionConfig : describes a …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\ndescribes a normalization config for destination definition\na field indicating the type of integration dialect to use …\na field indicating the name of the repository to be used …\na field indicating the tag of the docker repository to be …\nwhether the destination definition supports normalization.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe values required to configure OAuth flows. The schema …\nThe values required to configure OAuth flows. The schema …\nThe values required to configure OAuth flows. The schema …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe values required to configure OAuth flows. The schema …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDEPRECATED. Populate dbtCloud instead.\nDEPRECATED. Populate dbtCloud instead.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe id of the webhook configs to use from the workspace.\nThe account id associated with the job\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe job id associated with the job\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe values required to configure the destination. The …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe values required to configure the source. The schema …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nResetConfig : contains information about how a reset was …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\ncontains information about how a reset was configured. …\nResourceRequirements : optional resource requirements to …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\noptional resource requirements to run workers (blank for …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSelectedFieldInfo : Path to a field/column/property in a …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPath to a field/column/property in a stream to be …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSourceAutoPropagateChange : Input of the source …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInput of the source propagation, it contains the …\nThe values required to configure the source. The schema …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSourceCloneRequestBody : The values required to configure …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe values required to configure the source. The schema …\nThe values required to configure the source. The schema …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe values required to configure the source. The schema …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNumber of seconds allowed between 2 airbyte protocol …\nThe Airbyte Protocol version supported by the connector\nThe date when this connector was first released, in …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe specification for what values are required to …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSourceDefinitionUpdate : Update the SourceDefinition. …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUpdate the SourceDefinition. Currently, the only allowed …\nSourceDiscoverSchemaRead : Returns the results of a …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the results of a discover catalog job. If the job …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSourceDiscoverSchemaWriteRequestBody : to write this …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nto write this requested object to database.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe values required to configure OAuth flows. The schema …\nThe url to redirect to after getting the user consent\nThe values required to configure the source. The schema …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe values required to configure the source. The schema …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe values required to configure the source. The schema …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStreamStatusIncompleteRunCause : Values:   * <code>FAILED</code> - A …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nStreamStatusRunState : Values:   * <code>PENDING</code> - The stream …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nlist of field transformations. order does not matter.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nonly present if a config id was provided.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWebBackendCheckUpdatesRead : Summary of source and …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSummary of source and destination definitions that could …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOptional name of the connection\nUsed when namespaceDefinition is ‘customformat’. If …\nPrefix that will be prepended to the name of each stream …\nWebBackendConnectionListItem : Information about a …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nepoch time of the latest sync job. null if no sync job has …\nInformation about a connection that shows up in the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nepoch time of the latest sync job. null if no sync job has …\nUsed when namespaceDefinition is ‘customformat’. If …\nPrefix that will be prepended to the name of each stream …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWebBackendConnectionUpdate : Used to apply a patch-style …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nName that will be set to the connection\nUsed when namespaceDefinition is ‘customformat’. If …\nUsed to apply a patch-style update to a connection, which …\nPrefix that will be prepended to the name of each stream …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWebhookConfigRead : the readable info for a webhook …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhuman-readable name e.g. for display in UI\nthe readable info for a webhook config; omits sensitive …\nan auth token, to be passed as the value for an HTTP …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nhuman readable name for this webhook e.g. for UI display.\nif supplied, the webhook config will be validated by …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nWorkspaceUpdate : Used to apply a patch-style update to a …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUsed to apply a patch-style update to a workspace, which …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")