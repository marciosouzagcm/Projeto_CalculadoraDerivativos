searchState.loadedDescShard("windows_strings", 0, "Learn more about Rust for Windows here: …\nA BSTR string (BSTR) is a length-prefixed wide string.\nContains the error value\nAn (HSTRING) is a reference-counted and immutable UTF-16 …\nAn HSTRING builder that supports preallocating the <code>HSTRING</code> …\nContains the success value\nA pointer to a constant null-terminated string of 8-bit …\nA pointer to a constant null-terminated string of 16-bit …\nA pointer to a null-terminated string of 8-bit Windows …\nA pointer to a null-terminated string of 16-bit Unicode …\nA specialized <code>Result</code> type that provides Windows error …\nString data without the trailing 0\nString data without the trailing 0\nReturns a raw pointer to the <code>BSTR</code> buffer.\nReturns a raw pointer to the <code>HSTRING</code> buffer.\nReturns a raw pointer to the <code>PCSTR</code>\nReturns a raw pointer to the <code>PCWSTR</code>\nReturns a raw pointer to the <code>PSTR</code>\nReturns a raw pointer to the <code>PWSTR</code>.\nGet the string as 16-bit wide characters (wchars).\nGet the string as 16-bit wide characters (wchars).\nString data without the trailing 0\nString data without the trailing 0.\nAllow this string to be displayed.\nAllow this string to be displayed.\nAllow this string to be displayed.\nAllow this string to be displayed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct a new <code>PCSTR</code> from a raw pointer\nConstruct a new <code>PCWSTR</code> from a raw pointer\nConstruct a new <code>PSTR</code> from a raw pointer\nConstruct a new <code>PWSTR</code> from a raw pointer.\nCreate a <code>BSTR</code> from a slice of 16 bit characters (wchars).\nCreate a <code>HSTRING</code> from a slice of 16 bit characters …\nA literal HSTRING, length-prefixed wide string with a …\nA literal HSTRING, length-prefixed wide string with a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the string is empty.\nReturns <code>true</code> if the string is empty.\nReturns <code>true</code> if the string length is zero, and <code>false</code> …\nReturns <code>true</code> if the string length is zero, and <code>false</code> …\nChecks whether the <code>PCSTR</code> is null\nChecks whether the <code>PCWSTR</code> is null\nChecks whether the <code>PSTR</code> is null\nChecks whether the <code>PWSTR</code> is null.\nReturns the length of the string.\nReturns the length of the string. The length is measured …\nString length without the trailing 0\nString length without the trailing 0\nCreate an empty <code>BSTR</code>.\nCreate an empty <code>HSTRING</code>.\nCreates a preallocated <code>HSTRING</code> value.\nConstruct a null <code>PCSTR</code>\nConstruct a null <code>PCWSTR</code>\nConstruct a null <code>PSTR</code>\nConstruct a null <code>PWSTR</code>.\nA literal UTF-8 string with a trailing null terminator.\nA literal UTF-8 string with a trailing null terminator.\nCopy the <code>PCWSTR</code> into an <code>HSTRING</code>.\nCopy the <code>PWSTR</code> into an <code>HSTRING</code>.\nGet the contents of this <code>HSTRING</code> as a OsString.\nCopy the <code>PCSTR</code> into a Rust <code>String</code>.\nCopy the <code>PCWSTR</code> into a Rust <code>String</code>.\nCopy the <code>PSTR</code> into a Rust <code>String</code>.\nCopy the <code>PWSTR</code> into a Rust <code>String</code>.\nGet the contents of this <code>HSTRING</code> as a String lossily.\nShortens the string by removing any trailing 0 characters.\nA literal UTF-16 wide string with a trailing null …\nA literal UTF-16 wide string with a trailing null …")