searchState.loadedDescShard("nacl", 0, "Compare byte arrays in constant time.\nCompare 16-byte arrays in constant time.\nCompare 32-byte arrays in constant time.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ncrypto_scrypt(passwd, passwdlen, salt, saltlen, N, r, p, …\nThis module provides secret box pack and open …\nNaCl public box algorithm name for JWK’s (JSON Web Key)\nKey length for NaCl’s boxes\nNonce length for NaCl’s boxes\nLength of Poly hash, used in NaCl’s boxes\nThis function calculates a dh-style shared key (or stream …\nThis function generates a public for any given secret key, …\nThis function opens xsalsa20+poly1305 formatted cipher, …\nThis function packs given message into xsalsa20+poly1305 …\nThis function opens cipher that has a with-nonce layout, …\nThis function packs given message into  with-nonce layout, …\nThis function opens cipher that has a with-nonce layout, …\nThis function packs given message into  with-nonce layout, …\nThis function opens xsalsa20+poly1305 formatted cipher, …\nThis function packs given message into xsalsa20+poly1305 …\nNaCl secret box algorithm name for JWK’s (JSON Web Key)\nKey length for NaCl’s boxes\nNonce length for NaCl’s boxes\nLength of Poly hash, used in NaCl’s boxes\nThis function opens xsalsa20+poly1305 formatted cipher, …\nThis function packs given message into xsalsa20+poly1305 …\nThis function opens cipher that has a with-nonce layout, …\nThis function packs given message into  with-nonce layout, …\nThis clears internal state of the hasher.\nCompletes hashing and returns sha512 hash bytes. If no …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis absorbs given bytes, hashing even blocks, and …\nSigning algorithm name for JWK’s (JSON Web Key)\nPublic key length for signing\nSecret key length for signing\nSeed length, from which keypair is created\nExtracts public key from a given secret key\nReturns the argument unchanged.\nAnalog of crypto_sign_keypair in …\nCalls <code>U::from(self)</code>.\nAnalog of crypto_sign_open in …\nPublic key of this pair.\nAnalog of crypto_sign in crypto_sign/ed25519/ref/sign.c\nSigns message <code>m</code> with key <code>sk</code>, returning only signature …\nSecret key of this pair.\nVerifies that signature <code>sig</code> was created on message <code>m</code> with …")