searchState.loadedDescShard("winreg", 0, "Crate for accessing MS Windows registry\n<code>use winreg::enums::*;</code> to import all needed enumerations …\nTraits for loading/saving Registry values\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\n<em>Required features: <code>&quot;Win32_System_Registry&quot;</code></em>\nEnumeration of possible disposition values\nEnumeration of possible registry value types\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIterator over subkeys names\nIterator over values\nHandle of opened registry key\nCopy all the values and subkeys from <code>path</code> to <code>dest</code> key. …\nCreate subkey (and all missing parent keys) and open it …\nDelete key. Key names are not case sensitive. Cannot …\nRecursively delete subkey with all its subkeys and values. …\nDelete key from the desired platform-specific view of the …\nDelete specified value from registry. Will delete the …\nReturn an iterator over subkeys names.\nReturn an iterator over values.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet raw bytes from registry value. Will get the <code>Default</code> …\nGet a value from registry and seamlessly convert it to the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoad a registry hive from a file as an application hive. …\nLoad a registry hive from a file as an application hive …\nOpen subkey with <code>KEY_READ</code> permissions. Will open another …\nOpen subkey with desired permissions. Will open another …\nOpen one of predefined keys:\nReturn inner winapi HKEY of a key:\nWrite raw bytes from <code>RegValue</code> struct to a registry value. …\nSeamlessly convert a value from a rust type and write it …\nMetadata returned by <code>RegKey::query_info</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>last_write_time</code> field as …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRaw registry value\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA trait for types that can be loaded from registry values.\nA trait for types that can be written into registry values.")